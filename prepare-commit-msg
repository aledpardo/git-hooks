#!/usr/bin/env python

#
# Python script that implements a Git Hook of type Prepare Commit Message
# Author: Alexandre Pardo
# Date 06/26/2019
#

from subprocess import check_output
import re, sys

commit_msg_filepath = sys.argv[1]
not_allowed_branches = ['master', 'dev', 'develop', 'staging', 'release']

branch = check_output(['git', 'symbolic-ref', '--short', 'HEAD']).strip()

# matches for branch names like:
# feature/issue-123
# feature/issue123
# hotfix/issue-123
# hotfix/issue123
regex = '(feature|hotfix)\/(\w+-\d+|\w+\d+)'
isMatch = re.match(regex, branch)

# First we check if we're not taking shortcuts :D
if branch in not_allowed_branches:
    print '=====================WARNING====================='
    print 'Direct commit to', branch, 'branch is not allowed'
    print '================================================='
    sys.exit(1)

# If we're using the right branch name pattern,
# append the issue # in the beginning of the commit message
if isMatch <> None:
    issue = re.match(regex, branch).group(2)

    with open(commit_msg_filepath, 'r+') as fh:
        commit_msg = fh.read()
        fh.seek(0, 0)
        fh.write('[%s] %s' % (issue, commit_msg))
else:
    print '================================FRIENDLY REMINDER================================'
    print '=Observe the branch pattern. Its prefix should be either "feature/" or "hotfix/"='
    print '================================================================================='
    print ':-)'
